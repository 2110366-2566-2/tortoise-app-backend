definitions:
  models.DeletePetResponse:
    properties:
      delete_count:
        example: 1
        type: integer
      success:
        example: true
        type: boolean
    type: object
  models.ErrorResponse:
    properties:
      error:
        example: some error message
        type: string
      success:
        example: false
        type: boolean
    type: object
  models.Medical_record:
    properties:
      description:
        example: Routine checkup
        type: string
      medical_date:
        example: "2024-04-08"
        type: string
      medical_id:
        example: "123456789"
        type: string
    type: object
  models.Pet:
    properties:
      age:
        example: 3
        type: integer
      behavior:
        example: Friendly
        type: string
      category:
        example: Dog
        type: string
      description:
        example: A friendly and playful dog
        type: string
      id:
        example: 60163b3be1e8712c4e7f35cf
        type: string
      is_sold:
        example: false
        type: boolean
      media:
        example: https://example.com/fluffy.jpg
        type: string
      medical_records:
        items:
          $ref: '#/definitions/models.Medical_record'
        type: array
      name:
        example: Fluffy
        type: string
      price:
        example: 500
        type: integer
      seller_id:
        example: 60163b3be1e8712c4e7f35ce
        type: string
      sex:
        example: male
        type: string
      species:
        example: Golden Retriever
        type: string
      weight:
        example: 25.5
        type: number
    type: object
  models.PetCard:
    properties:
      category:
        example: Dog
        type: string
      id:
        example: 60163b3be1e8712c4e7f35cf
        type: string
      media:
        example: https://example.com/fluffy.jpg
        type: string
      name:
        example: Fluffy
        type: string
      price:
        example: 100
        type: integer
      seller_id:
        example: 60163b3be1e8712c4e7f35ce
        type: string
      seller_name:
        example: John
        type: string
      seller_surname:
        example: Doe
        type: string
      species:
        example: Golden Retriever
        type: string
    type: object
  models.PetCardResponse:
    properties:
      count:
        example: 1
        type: integer
      data:
        items:
          $ref: '#/definitions/models.PetCard'
        type: array
      success:
        example: true
        type: boolean
    type: object
  models.PetRequest:
    properties:
      age:
        example: 3
        type: integer
      behavior:
        example: Friendly
        type: string
      category:
        example: Dog
        type: string
      description:
        example: A friendly and playful dog
        type: string
      is_sold:
        example: false
        type: boolean
      media:
        example: https://example.com/fluffy.jpg
        type: string
      medical_records:
        items:
          $ref: '#/definitions/models.Medical_record'
        type: array
      name:
        example: Fluffy
        type: string
      price:
        example: 500
        type: integer
      sex:
        example: male
        type: string
      species:
        example: Golden Retriever
        type: string
      weight:
        example: 25.5
        type: number
    type: object
  models.PetResponse:
    properties:
      data:
        $ref: '#/definitions/models.Pet'
      success:
        example: true
        type: boolean
    type: object
info:
  contact: {}
paths:
  /api/v1/pets/:
    get:
      description: Get filtered pets by filter params
      operationId: GetFilteredPets
      parameters:
      - description: Category of pet
        in: query
        name: category
        type: string
      - description: Species of pet
        in: query
        name: species
        type: string
      - description: Sex of pet
        in: query
        name: sex
        type: string
      - description: Behavior of pet
        in: query
        name: behavior
        type: string
      - description: Minimum age of pet
        in: query
        name: minAge
        type: integer
      - description: Maximum age of pet
        in: query
        name: maxAge
        type: integer
      - description: Minimum weight of pet
        in: query
        name: minWeight
        type: integer
      - description: Maximum weight of pet
        in: query
        name: maxWeight
        type: integer
      - description: Minimum price of pet
        in: query
        name: minPrice
        type: integer
      - description: Maximum price of pet
        in: query
        name: maxPrice
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PetCardResponse'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get filtered pets
      tags:
      - Pets
  /api/v1/pets/pet/{petID}:
    delete:
      consumes:
      - application/json
      description: Delete pet by pet ID and delete pet from user's pets
      parameters:
      - description: ID of the pet to delete
        in: path
        name: petID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: return deleted count
          schema:
            $ref: '#/definitions/models.DeletePetResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete pet
      tags:
      - Pets
    get:
      description: Get single pet by petID
      operationId: GetPetByPetID
      parameters:
      - description: ID of the pet to perform the operation on
        in: path
        name: petID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PetResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get single pet by petID
      tags:
      - Pets
    put:
      consumes:
      - application/json
      description: Update pet by pet ID
      parameters:
      - description: ID of the pet to perform the operation on
        in: path
        name: petID
        required: true
        type: string
      - description: Pet object that needs to be updated
        in: body
        name: Pet
        required: true
        schema:
          $ref: '#/definitions/models.PetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: return updated pet
          schema:
            $ref: '#/definitions/models.PetResponse'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update pet
      tags:
      - Pets
  /api/v1/pets/seller/{sellerID}:
    get:
      description: Get pets by sellerID
      operationId: GetPetBySeller
      parameters:
      - description: ID of the seller to perform the operation on
        in: path
        name: sellerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PetCardResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get pets by sellerID
      tags:
      - Pets
    post:
      consumes:
      - application/json
      description: Creat a new pet
      parameters:
      - description: ID of the seller to perform the operation on
        in: path
        name: sellerID
        required: true
        type: string
      - description: Pet object that needs to be created
        in: body
        name: Pet
        required: true
        schema:
          $ref: '#/definitions/models.PetRequest'
      responses:
        "200":
          description: return created pet
          schema:
            $ref: '#/definitions/models.PetResponse'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new pet
      tags:
      - Pets
swagger: "2.0"
